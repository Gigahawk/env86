FROM --platform=linux/386 i386/alpine:3.18.6 AS kernel
ENV KERNEL=lts
RUN apk add mkinitfs --no-cache --allow-untrusted --repository https://dl-cdn.alpinelinux.org/alpine/edge/main/ 
RUN if [ "$KERNEL" == "lts" ]; then \
    apk add linux-lts \
            linux-firmware-none \
            linux-firmware-sb16; \
else \
    apk add linux-$KERNEL; \
fi
RUN mkinitfs -F "ata base ide scsi virtio ext4 9p" $(cat /usr/share/kernel/$KERNEL/kernel.release)

FROM alpine:3.18 AS v86
WORKDIR /v86
RUN mkdir -p /out
RUN apk add --update curl clang make openjdk8-jre-base npm python3 git openssh
RUN curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y && PATH="${HOME}/.cargo/bin:${PATH}" rustup target add wasm32-unknown-unknown
RUN git clone --depth=1 https://github.com/copy/v86.git .
RUN PATH="${HOME}/.cargo/bin:${PATH}" make all && rm -rf closure-compiler gen lib src .cargo cargo.toml Makefile
RUN cp ./build/libv86.js /out
RUN cp ./build/v86.wasm /out
RUN cp ./bios/seabios.bin /out
RUN cp ./bios/vgabios.bin /out

FROM alpine:edge
WORKDIR /app
RUN apk add -u go build-base docker pkgconf webkit2gtk-dev gtk+3.0-dev libayatana-appindicator-dev
RUN apk upgrade --no-cache --available \
    && apk add --no-cache \
      chromium-swiftshader \
      ttf-freefont \
      font-noto-emoji \
    && apk add --no-cache \
      --repository=https://dl-cdn.alpinelinux.org/alpine/edge/community \
      font-wqy-zenhei
ENV CHROME_BIN=/usr/bin/chromium-browser \
    CHROME_PATH=/usr/lib/chromium/
ENV CHROMIUM_FLAGS="--disable-software-rasterizer --disable-dev-shm-usage"
COPY . .
RUN mv ./scripts/local.conf /etc/fonts/local.conf
RUN go mod tidy
COPY --from=kernel /boot/vmlinuz-lts /app/assets/vmlinuz.bin
COPY --from=kernel /boot/initramfs-lts /app/assets/initramfs.bin
COPY --from=v86 /out/* /app/assets/
RUN make guest
RUN go build -o /bin/env86 ./cmd/env86

